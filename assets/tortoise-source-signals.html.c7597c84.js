import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.c099355f.js";const t={},p=e(`<h3 id="\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F" aria-hidden="true">#</a> \u573A\u666F</h3><p>\u5728\u4F7F\u7528Tortoise\u64CD\u4F5C\u6570\u636E\u5E93\u7684\u65F6\u5019\u53D1\u73B0\uFF0C\u901A\u8FC7\u5BF9\u64CD\u4F5C\u6570\u636E\u5E93\u6A21\u578B\u52A0\u4EE5\u88C5\u9970\u5668\uFF0C\u5982<code>@pre_save(Model)</code>\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u5BF9\u8FD9\u4E2A\u6A21\u578B\u5728<code>savue</code>\u65F6\uFF0C\u81EA\u52A8\u8C03\u7528\u88AB\u88C5\u9970\u7684\u65B9\u6CD5\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5BF9\u6A21\u578B\u7684\u4E00\u4E9B\u64CD\u4F5C\u3002</p><p>\u5728\u6B64\u5148\u4ECE\u5B98\u65B9\u6587\u6863\u5165\u624B\uFF0C\u770B\u4E00\u4E0B\u5B98\u65B9\u7684\u5BF9\u4E8E\u6A21\u578B\u4FE1\u53F7\u7684Example</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
This example demonstrates model signals usage
&quot;&quot;&quot;</span>
<span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token punctuation">,</span> Optional<span class="token punctuation">,</span> Type

<span class="token keyword">from</span> tortoise <span class="token keyword">import</span> BaseDBAsyncClient<span class="token punctuation">,</span> Tortoise<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> run_async
<span class="token keyword">from</span> tortoise<span class="token punctuation">.</span>models <span class="token keyword">import</span> Model
<span class="token keyword">from</span> tortoise<span class="token punctuation">.</span>signals <span class="token keyword">import</span> post_delete<span class="token punctuation">,</span> post_save<span class="token punctuation">,</span> pre_delete<span class="token punctuation">,</span> pre_save


<span class="token keyword">class</span> <span class="token class-name">Signal</span><span class="token punctuation">(</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> fields<span class="token punctuation">.</span>IntField<span class="token punctuation">(</span>pk<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> fields<span class="token punctuation">.</span>TextField<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        table <span class="token operator">=</span> <span class="token string">&quot;signal&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>name


<span class="token decorator annotation punctuation">@pre_save</span><span class="token punctuation">(</span>Signal<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">signal_pre_save</span><span class="token punctuation">(</span>
    sender<span class="token punctuation">:</span> <span class="token string">&quot;Type[Signal]&quot;</span><span class="token punctuation">,</span> instance<span class="token punctuation">:</span> Signal<span class="token punctuation">,</span> using_db<span class="token punctuation">,</span> update_fields
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;signal_pre_save&#39;</span><span class="token punctuation">,</span> sender<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> using_db<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@post_save</span><span class="token punctuation">(</span>Signal<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">signal_post_save</span><span class="token punctuation">(</span>
    sender<span class="token punctuation">:</span> <span class="token string">&quot;Type[Signal]&quot;</span><span class="token punctuation">,</span>
    instance<span class="token punctuation">:</span> Signal<span class="token punctuation">,</span>
    created<span class="token punctuation">:</span> <span class="token builtin">bool</span><span class="token punctuation">,</span>
    using_db<span class="token punctuation">:</span> <span class="token string">&quot;Optional[BaseDBAsyncClient]&quot;</span><span class="token punctuation">,</span>
    update_fields<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;post_save&#39;</span><span class="token punctuation">,</span> sender<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> using_db<span class="token punctuation">,</span> created<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@pre_delete</span><span class="token punctuation">(</span>Signal<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">signal_pre_delete</span><span class="token punctuation">(</span>
    sender<span class="token punctuation">:</span> <span class="token string">&quot;Type[Signal]&quot;</span><span class="token punctuation">,</span> instance<span class="token punctuation">:</span> Signal<span class="token punctuation">,</span> using_db<span class="token punctuation">:</span> <span class="token string">&quot;Optional[BaseDBAsyncClient]&quot;</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;pre_delete&#39;</span><span class="token punctuation">,</span> sender<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> using_db<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@post_delete</span><span class="token punctuation">(</span>Signal<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">signal_post_delete</span><span class="token punctuation">(</span>
    sender<span class="token punctuation">:</span> <span class="token string">&quot;Type[Signal]&quot;</span><span class="token punctuation">,</span> instance<span class="token punctuation">:</span> Signal<span class="token punctuation">,</span> using_db<span class="token punctuation">:</span> <span class="token string">&quot;Optional[BaseDBAsyncClient]&quot;</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;post_delete&#39;</span><span class="token punctuation">,</span> sender<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> using_db<span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> Tortoise<span class="token punctuation">.</span>init<span class="token punctuation">(</span>db_url<span class="token operator">=</span><span class="token string">&quot;sqlite://:memory:&quot;</span><span class="token punctuation">,</span> modules<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;models&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;__main__&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> Tortoise<span class="token punctuation">.</span>generate_schemas<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># pre_save,post_save will be send</span>
    signal <span class="token operator">=</span> <span class="token keyword">await</span> Signal<span class="token punctuation">.</span>create<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Signal&quot;</span><span class="token punctuation">)</span>
    signal<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Signal_Save&quot;</span>

    <span class="token comment"># pre_save,post_save will be send</span>
    <span class="token keyword">await</span> signal<span class="token punctuation">.</span>save<span class="token punctuation">(</span>update_fields<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment"># pre_delete,post_delete will be send</span>
    <span class="token keyword">await</span> signal<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    run_async<span class="token punctuation">(</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u53EF\u76F4\u63A5\u590D\u5236\u540E\u8FD0\u884C\uFF0C\u8FD0\u884C\u540E\u7684\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>signal_pre_save &lt;class &#39;__main__.Signal&#39;&gt; Signal &lt;tortoise.backends.sqlite.client.SqliteClient object at 0x7f8518319400&gt; None
post_save &lt;class &#39;__main__.Signal&#39;&gt; Signal &lt;tortoise.backends.sqlite.client.SqliteClient object at 0x7f8518319400&gt; True None
signal_pre_save &lt;class &#39;__main__.Signal&#39;&gt; Signal_Save &lt;tortoise.backends.sqlite.client.SqliteClient object at 0x7f8518319400&gt; [&#39;name&#39;]
post_save &lt;class &#39;__main__.Signal&#39;&gt; Signal_Save &lt;tortoise.backends.sqlite.client.SqliteClient object at 0x7f8518319400&gt; False [&#39;name&#39;]
pre_delete &lt;class &#39;__main__.Signal&#39;&gt; Signal_Save &lt;tortoise.backends.sqlite.client.SqliteClient object at 0x7f8518319400&gt;
post_delete &lt;class &#39;__main__.Signal&#39;&gt; Signal_Save &lt;tortoise.backends.sqlite.client.SqliteClient object at 0x7f8518319400&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u5BF9\u6A21\u578B\u8FDB\u884C\u4FDD\u5B58\u548C\u5220\u9664\u65F6\u5019\uFF0C\u90FD\u4F1A\u8C03\u7528\u5BF9\u5E94\u7684\u4FE1\u53F7\u65B9\u6CD5\u3002</p><h3 id="\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801" aria-hidden="true">#</a> \u6E90\u7801</h3><p>\u4ECE\u5BFC\u5305\u53EF\u4EE5\u5F97\u77E5\uFF0Ctortoise\u7684\u6240\u6709\u4FE1\u53F7\u65B9\u6CD5\u90FD\u5728<code>tortoise.signals</code>\u4E2D\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Callable

Signals <span class="token operator">=</span> Enum<span class="token punctuation">(</span><span class="token string">&quot;Signals&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;pre_save&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;post_save&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pre_delete&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;post_delete&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">post_save</span><span class="token punctuation">(</span><span class="token operator">*</span>senders<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Callable<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Register given models post_save signal.

    :param senders: Model class
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> sender <span class="token keyword">in</span> senders<span class="token punctuation">:</span>
            sender<span class="token punctuation">.</span>register_listener<span class="token punctuation">(</span>Signals<span class="token punctuation">.</span>post_save<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
        <span class="token keyword">return</span> f

    <span class="token keyword">return</span> decorator
   
<span class="token keyword">def</span> <span class="token function">pre_save</span><span class="token punctuation">(</span><span class="token operator">*</span>senders<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Callable<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">def</span> <span class="token function">pre_delete</span><span class="token punctuation">(</span><span class="token operator">*</span>senders<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Callable<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">def</span> <span class="token function">post_delete</span><span class="token punctuation">(</span><span class="token operator">*</span>senders<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Callable<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5185\u90E8\u5B9E\u73B0\u7684\u56DB\u4E2A\u4FE1\u53F7\u65B9\u6CD5\u5206\u522B\u662F\u6A21\u578B\u7684\u4FDD\u5B58\u540E\uFF0C\u4FDD\u5B58\u524D\uFF0C\u5220\u9664\u524D\uFF0C\u5220\u9664\u540E\u3002</p><p>\u5176\u5185\u90E8\u88C5\u9970\u5668\u4EE3\u7801\u4E5F\u5341\u5206\u7B80\u5355\uFF0C\u5C31\u662F\u5BF9\u88C5\u9970\u5668\u4E2D\u7684\u53C2\u6570\uFF08\u4E5F\u5C31\u662F\u6A21\u578B\uFF09\uFF0C\u6CE8\u518C\u4E00\u4E2A\u76D1\u542C\u8005\uFF0C\u800C\u8FD9\u4E2A\u76D1\u542C\u8005\uFF0C\u5176\u5B9E\u5C31\u662F\u88AB\u88C5\u9970\u7684\u65B9\u6CD5\u3002</p><p>\u5982\u4E0A\u9762\u7684\u5B98\u65B9\u793A\u4F8B\u4E2D</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># \u7ED9\u6A21\u578BSignal\u6CE8\u518C\u4E00\u4E2A\u76D1\u542C\u8005\uFF0C\u5B83\u662F\u65B9\u6CD5signal_pre_save</span>
<span class="token decorator annotation punctuation">@pre_save</span><span class="token punctuation">(</span>Signal<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">signal_pre_save</span><span class="token punctuation">(</span>
    sender<span class="token punctuation">:</span> <span class="token string">&quot;Type[Signal]&quot;</span><span class="token punctuation">,</span> instance<span class="token punctuation">:</span> Signal<span class="token punctuation">,</span> using_db<span class="token punctuation">,</span> update_fields
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;signal_pre_save&#39;</span><span class="token punctuation">,</span> sender<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> using_db<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u5230\u4E86Model\u7C7B\u4E2D\uFF0C\u81EA\u7136\u5C31\u6709\u4E00\u4E2Aregister_listener\u65B9\u6CD5\uFF0C\u5B9A\u775B\u4E00\u770B\uFF0C\u4E0A\u9762\u793A\u4F8BSignal\u4E2D\u5E76\u6CA1\u6709register_listener\u65B9\u6CD5\uFF0C\u6240\u4EE5\u81EA\u7136\u5C31\u60F3\u5230\u4E86\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5FC5\u5B9A\u5728\u7236\u7C7BModel\u4E2D\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Model</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">register_listener</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> signal<span class="token punctuation">:</span> Signals<span class="token punctuation">,</span> listener<span class="token punctuation">:</span> Callable<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">callable</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> ConfigurationError<span class="token punctuation">(</span><span class="token string">&quot;Signal listener must be callable!&quot;</span><span class="token punctuation">)</span>
        <span class="token comment"># \u68C0\u6D4B\u662F\u5426\u5DF2\u7ECF\u6CE8\u518C\u8FC7</span>
        cls_listeners <span class="token operator">=</span> cls<span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span>get<span class="token punctuation">(</span>signal<span class="token punctuation">)</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># type:ignore</span>
        <span class="token keyword">if</span> listener <span class="token keyword">not</span> <span class="token keyword">in</span> cls_listeners<span class="token punctuation">:</span>
            <span class="token comment"># \u6CE8\u518C\u76D1\u542C\u8005</span>
            cls_listeners<span class="token punctuation">.</span>append<span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6CE8\u518C\u540E\uFF0C\u8FD9\u4E2Alisteners\u5C31\u4F1A\u4E00\u76F4\u8DDF\u7740\u8FD9\u4E2ASignal\u7C7B\u3002\u53EA\u9700\u8981\u5728\u9700\u8981\u64CD\u4F5C\u5173\u952E\u4EE3\u7801\u7684\u5730\u65B9\uFF0C\u8FDB\u884C\u8C03\u7528\u5373\u53EF\u3002</p><p>\u90A3\u5C31\u770B\u770B\uFF0C\u5728\u6A21\u578Bsave\u7684\u65F6\u5019\uFF0C\u90FD\u5E72\u4E86\u4EC0\u4E48\uFF1F</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">save</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        using_db<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>BaseDBAsyncClient<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        update_fields<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>Iterable<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        force_create<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        force_update<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token comment"># \u6267\u884C\u4FDD\u5B58\u524D\u7684\u4FE1\u53F7</span>
        <span class="token keyword">await</span> self<span class="token punctuation">.</span>_pre_save<span class="token punctuation">(</span>db<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>

        <span class="token keyword">if</span> force_create<span class="token punctuation">:</span>
            <span class="token keyword">await</span> executor<span class="token punctuation">.</span>execute_insert<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            created <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">elif</span> force_update<span class="token punctuation">:</span>
            rows <span class="token operator">=</span> <span class="token keyword">await</span> executor<span class="token punctuation">.</span>execute_update<span class="token punctuation">(</span>self<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>
            <span class="token keyword">if</span> rows <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">raise</span> IntegrityError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Can&#39;t update object that doesn&#39;t exist. PK: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>pk<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            created <span class="token operator">=</span> <span class="token boolean">False</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>_saved_in_db <span class="token keyword">or</span> update_fields<span class="token punctuation">:</span>
                <span class="token keyword">if</span> self<span class="token punctuation">.</span>pk <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    <span class="token keyword">await</span> executor<span class="token punctuation">.</span>execute_insert<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
                    created <span class="token operator">=</span> <span class="token boolean">True</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">await</span> executor<span class="token punctuation">.</span>execute_update<span class="token punctuation">(</span>self<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>
                    created <span class="token operator">=</span> <span class="token boolean">False</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token comment"># TODO: Do a merge/upsert operation here instead. Let the executor determine an optimal strategy for each DB engine.</span>
                <span class="token keyword">await</span> executor<span class="token punctuation">.</span>execute_insert<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
                created <span class="token operator">=</span> <span class="token boolean">True</span>

        self<span class="token punctuation">.</span>_saved_in_db <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token comment"># \u6267\u884C\u4FDD\u5B58\u540E\u7684\u4FE1\u53F7</span>
        <span class="token keyword">await</span> self<span class="token punctuation">.</span>_post_save<span class="token punctuation">(</span>db<span class="token punctuation">,</span> created<span class="token punctuation">,</span> update_fields<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u629B\u5F00\u5176\u4ED6\u4EE3\u7801\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u6A21\u578Bsave\u7684\u65F6\u5019\uFF0C\u5176\u5B9E\u662F\u5148\u6267\u884C\u4FDD\u5B58\u524D\u7684\u4FE1\u53F7\uFF0C\u7136\u540E\u6267\u884C\u4FDD\u5B58\u540E\u7684\u4FE1\u53F7\u3002</p><h3 id="\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u4FE1\u53F7" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u4FE1\u53F7" aria-hidden="true">#</a> \u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u4FE1\u53F7</h3><p>\u6709\u4E86\u4EE5\u4E0A\u7684\u7ECF\u9A8C\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u4FE1\u53F7\uFF0C\u6BD4\u5982\u6211\u6253\u7B97\u505A\u4E2A\u6570\u636E\u5904\u7406\u5668\u7684\u7C7B\uFF0C\u6211\u60F3\u5728\u8FD9\u4E2A\u5904\u7406\u5668\u5DE5\u4F5C\u4E2D\uFF0C\u76D1\u542C\u5904\u7406\u524D/\u540E\u7684\u4FE1\u53F7\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Callable<span class="token punctuation">,</span> Dict

<span class="token comment"># \u58F0\u660E\u679A\u4E3E\u4FE1\u53F7\u91CF</span>
Signals <span class="token operator">=</span> Enum<span class="token punctuation">(</span><span class="token string">&quot;Signals&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;before_process&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;after_process&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token comment"># \u5904\u7406\u524D\u7684\u88C5\u9970\u5668</span>
<span class="token keyword">def</span> <span class="token function">before_process</span><span class="token punctuation">(</span><span class="token operator">*</span>senders<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> sender <span class="token keyword">in</span> senders<span class="token punctuation">:</span>
            sender<span class="token punctuation">.</span>register_listener<span class="token punctuation">(</span>Signals<span class="token punctuation">.</span>before_process<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
        <span class="token keyword">return</span> f

    <span class="token keyword">return</span> decorator


<span class="token comment"># \u5904\u7406\u540E\u7684\u88C5\u9970\u5668</span>
<span class="token keyword">def</span> <span class="token function">after_process</span><span class="token punctuation">(</span><span class="token operator">*</span>senders<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> sender <span class="token keyword">in</span> senders<span class="token punctuation">:</span>
            sender<span class="token punctuation">.</span>register_listener<span class="token punctuation">(</span>Signals<span class="token punctuation">.</span>after_process<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
        <span class="token keyword">return</span> f

    <span class="token keyword">return</span> decorator


<span class="token keyword">class</span> <span class="token class-name">Model</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    _listeners<span class="token punctuation">:</span> Dict <span class="token operator">=</span> <span class="token punctuation">{</span>
        Signals<span class="token punctuation">.</span>before_process<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        Signals<span class="token punctuation">.</span>after_process<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">register_listener</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> signal<span class="token punctuation">:</span> Signals<span class="token punctuation">,</span> listener<span class="token punctuation">:</span> Callable<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u6CE8\u518C\u76D1\u542C\u8005&quot;&quot;&quot;</span>
        <span class="token comment"># \u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u76D1\u542C\u8005</span>
        cls_listeners <span class="token operator">=</span> cls<span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span>get<span class="token punctuation">(</span>signal<span class="token punctuation">)</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> listener <span class="token keyword">not</span> <span class="token keyword">in</span> cls_listeners<span class="token punctuation">:</span>
            <span class="token comment"># \u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u6DFB\u52A0\u76D1\u542C\u8005</span>
            cls_listeners<span class="token punctuation">.</span>append<span class="token punctuation">(</span>listener<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">_before_process</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># \u53D6\u51FAbefore_process\u76D1\u542C\u8005</span>
        cls_listeners <span class="token operator">=</span> self<span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span>get<span class="token punctuation">(</span>Signals<span class="token punctuation">.</span>before_process<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__class__<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> listener <span class="token keyword">in</span> cls_listeners<span class="token punctuation">:</span>
            <span class="token comment"># \u8C03\u7528\u76D1\u542C\u8005</span>
            listener<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__class__<span class="token punctuation">,</span> self<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">_after_process</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># \u53D6\u51FAafter_process\u76D1\u542C\u8005</span>
        cls_listeners <span class="token operator">=</span> self<span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span>get<span class="token punctuation">(</span>Signals<span class="token punctuation">.</span>after_process<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__class__<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> listener <span class="token keyword">in</span> cls_listeners<span class="token punctuation">:</span>
            <span class="token comment"># \u8C03\u7528\u76D1\u542C\u8005</span>
            listener<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__class__<span class="token punctuation">,</span> self<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">SignalModel</span><span class="token punctuation">(</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">process</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u771F\u6B63\u7684\u8C03\u7528\u7AEF&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>_before_process<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Processing&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_after_process<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># \u6CE8\u518Cbefore_process\u4FE1\u53F7</span>
<span class="token decorator annotation punctuation">@before_process</span><span class="token punctuation">(</span>SignalModel<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">before_process_listener</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;before_process_listener1&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">,</span> kwargs<span class="token punctuation">)</span>


<span class="token comment"># \u6CE8\u518Cbefore_process\u4FE1\u53F7</span>
<span class="token decorator annotation punctuation">@before_process</span><span class="token punctuation">(</span>SignalModel<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">before_process_listener</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;before_process_listener2&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">,</span> kwargs<span class="token punctuation">)</span>


<span class="token comment"># \u6CE8\u518Cafter_process\u4FE1\u53F7</span>
<span class="token decorator annotation punctuation">@after_process</span><span class="token punctuation">(</span>SignalModel<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">before_process_listener</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;after_process_listener&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">,</span> kwargs<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    sm <span class="token operator">=</span> SignalModel<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sm<span class="token punctuation">.</span>process<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>before_process_listener1 (&lt;class &#39;__main__.SignalModel&#39;&gt;, &lt;__main__.SignalModel object at 0x7ff700116e50&gt;) {}
before_process_listener2 (&lt;class &#39;__main__.SignalModel&#39;&gt;, &lt;__main__.SignalModel object at 0x7ff700116e50&gt;) {}
Processing
after_process_listener (&lt;class &#39;__main__.SignalModel&#39;&gt;, &lt;__main__.SignalModel object at 0x7ff700116e50&gt;) {}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[p];function c(l,i){return s(),a("div",null,o)}var d=n(t,[["render",c],["__file","tortoise-source-signals.html.vue"]]);export{d as default};
