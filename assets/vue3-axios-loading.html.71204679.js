import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.c099355f.js";const t={},p=e(`<h2 id="\u73B0\u72B6" tabindex="-1"><a class="header-anchor" href="#\u73B0\u72B6" aria-hidden="true">#</a> \u73B0\u72B6</h2><p>\u5728\u5B9E\u9645\u9879\u76EE\u5F00\u53D1\u4E2D\uFF0C\u6709\u4E00\u4E2A\u5341\u5206\u5E38\u89C1\u7684\u573A\u666F\uFF0C\u8868\u683C\u4ECE\u670D\u52A1\u7AEF\u83B7\u53D6\u6570\u636E\u540E\u6E32\u67D3\uFF0C\u4E3A\u4E86\u53CB\u597D\u7684\u7528\u6237\u4F53\u9A8C\uFF0C\u6211\u4EEC\u9700\u8981\u8BF7\u6C42\u524D\u52A0\u8F7Dloading\u52A8\u753B\uFF0C\u7ED3\u675F\u540E\u5173\u95EDloading\u52A8\u753B\u3002</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> getUserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/system/user&#39;</span>

<span class="token keyword">const</span> tableItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    tableItems<span class="token punctuation">.</span>value <span class="token operator">=</span> res<span class="token punctuation">.</span>data
    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">v-loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableItems<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
// ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u7CFB\u7EDF\u5199\u7684\u591A\u4E86\uFF0C\u5927\u5BB6\u90FD\u8BA4\u4E3A\u8FD9\u662F\u5F88\u81EA\u7136\u5F88\u6B63\u5E38\u7684\u64CD\u4F5C\uFF0C\u4E5F\u7B26\u5408\u57FA\u672C\u7684\u4EA4\u4E92\u4F53\u9A8C\u3002\u4F46\u662F\u4ECE\u4EE3\u7801\u5C42\u9762\u601D\u8003\u4E00\u4E2A\u95EE\u9898\uFF1A\u5728\u6EE1\u8DB3\u4EA4\u4E92\u4F53\u9A8C\u7684\u524D\u63D0\u4E0B\uFF0C\u80FD\u5426\u66F4\u7B80\u5355\u7684\u53BB\u5B9E\u73B0\u8FD9\u4E2A\u9700\u6C42\u5462\uFF1F</p><p>\u601D\u8003\uFF1A</p><ul><li>\u6240\u6709\u7684loading\u64CD\u4F5C\u90FD\u662F\u57FA\u4E8Eaxios\u7684\u8BF7\u6C42\u7684\uFF0C\u8BF7\u6C42\u524D\u52A0\u8F7D\uFF0C\u8BF7\u6C42\u540E/\u5931\u8D25\u540E\u5173\u95ED\u3002</li><li>\u662F\u5426\u53EF\u4EE5\u5728axios\u5C42\u64CD\u4F5C\u8FD9\u4E9Bloading\u72B6\u6001\uFF0C\u8BA9\u4E1A\u52A1\u9875\u9762\u77E5\u9053\u76EE\u524D\u7684loading\u72B6\u6001\u5462\uFF1F</li><li>\u7531\u4E8Eloading\u72B6\u6001\u662F\u4E24\u79CD\u72B6\u6001\uFF1A<code>true</code> or <code>false</code>\u3002\u80FD\u591F\u66F4\u7B80\u5355\u7684\u53BB\u7BA1\u7406\u8FD9\u4E9B\u72B6\u6001\uFF1F</li></ul><p>\u5E26\u7740\u7591\u95EE\uFF0C\u4ECE\u4E0B\u81F3\u4E0A\u53BB\u5C1D\u8BD5\u89E3\u51B3\u3002</p><h2 id="\u5C01\u88C5\u4E00\u4E2Aboolean\u7684\u72B6\u6001\u63A7\u5236\u5668" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5\u4E00\u4E2Aboolean\u7684\u72B6\u6001\u63A7\u5236\u5668" aria-hidden="true">#</a> \u5C01\u88C5\u4E00\u4E2ABoolean\u7684\u72B6\u6001\u63A7\u5236\u5668</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u521B\u5EFA\u4E00\u4E2A\u903B\u8F91\u72B6\u6001
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">defalutValue</span> \u9ED8\u8BA4\u503C\u4E3Afalse
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useBoolen</span><span class="token punctuation">(</span><span class="token parameter">defalutValue <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> bool <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>defalutValue<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">toggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        bool<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">!</span>bool<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        bool<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        bool<span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setTrue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        bool<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setFalse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        bool<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        bool<span class="token punctuation">,</span>
        toggle<span class="token punctuation">,</span>
        reset<span class="token punctuation">,</span>
        set<span class="token punctuation">,</span>
        setTrue<span class="token punctuation">,</span>
        setFalse
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C01\u88C5\u4E00\u4E2Aloading\u72B6\u6001\u63A7\u5236\u5668" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5\u4E00\u4E2Aloading\u72B6\u6001\u63A7\u5236\u5668" aria-hidden="true">#</a> \u5C01\u88C5\u4E00\u4E2Aloading\u72B6\u6001\u63A7\u5236\u5668</h2><p>\u57FA\u4E8E\u4EE5\u4E0A\u7684Boolen\u72B6\u6001\u63A7\u5236\u5668\uFF0C\u6211\u4EEC\u53EF\u4EE5\u518D\u5C01\u88C5\u4E00\u4E2Aloading\u72B6\u6001\u63A7\u5236\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> useBoolen <span class="token keyword">from</span> <span class="token string">&#39;./useBoolen&#39;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u521B\u5EFA\u4E00\u4E2Aloading\u72B6\u6001
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">defaultValue</span> \u9ED8\u8BA4\u503C\u4E3Afalse
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useLoading</span><span class="token punctuation">(</span><span class="token parameter">defaultValue <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">bool</span><span class="token operator">:</span> loading<span class="token punctuation">,</span>
        <span class="token literal-property property">setTrue</span><span class="token operator">:</span> startLoading<span class="token punctuation">,</span>
        <span class="token literal-property property">setFalse</span><span class="token operator">:</span> endLoading
    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useBoolen</span><span class="token punctuation">(</span>defaultValue<span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        loading<span class="token punctuation">,</span>
        startLoading<span class="token punctuation">,</span>
        endLoading
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useLoading</code>\u66B4\u9732\u4E09\u4E2A\u53C2\u6570\uFF1A</p><ul><li>loading\uFF1Aloading\u7684\u5F53\u524D\u72B6\u6001</li><li>startLoading\uFF1A\u5F00\u59CBloading</li><li>endLoading\uFF1A\u7ED3\u675Floading</li></ul><h2 id="\u5728axios\u5C42\u64CD\u4F5Cloading\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u5728axios\u5C42\u64CD\u4F5Cloading\u72B6\u6001" aria-hidden="true">#</a> \u5728axios\u5C42\u64CD\u4F5Cloading\u72B6\u6001</h2><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u53EF\u4EE5\u8FDB\u5165axios\u5C01\u88C5\u4E2D\uFF0C\u5BF9\u8BF7\u6C42\u7684\u524D\u540E\u4F7F\u7528<code>useLoading</code>\u8FDB\u884C\u63A7\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> useLoading <span class="token keyword">from</span> <span class="token string">&#39;@/composables/useLoading&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> loading<span class="token punctuation">,</span> startLoading<span class="token punctuation">,</span> endLoading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

api<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">startLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">return</span> request
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">endLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

api<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
    <span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">endLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">endLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u522B\u5FD8\u4E86\uFF0C\u66B4\u9732\u5F53\u524D\u7684loading\u72B6\u6001</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>
    loading
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6539\u8FDB\u540E" tabindex="-1"><a class="header-anchor" href="#\u6539\u8FDB\u540E" aria-hidden="true">#</a> \u6539\u8FDB\u540E</h2><p>\u7ECF\u8FC7\u4EE5\u4E0A\u5C01\u88C5\uFF0C\u6211\u4EEC\u5728\u4E1A\u52A1\u9875\u9762\u4E2D\uFF0C\u62FF\u5230axios\u66B4\u9732\u7684loading\u72B6\u6001\uFF0C\u5C06\u5B83\u7ED1\u5B9A\u5230\u7EC4\u4EF6\u7684<code>v-loading</code>\u5C5E\u6027\u4E0A\uFF0C\u5C31\u53EF\u4EE5\u5B9E\u73B0loading\u7684\u72B6\u6001\u81EA\u52A8\u63A7\u5236\u4E86\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u5C06\u4EE5\u4E0A\u7684\u4EE3\u7801\u6539\u88C5\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> loading <span class="token punctuation">}</span>  <span class="token keyword">from</span> <span class="token string">&#39;@/api&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getUserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/system/user&#39;</span>

<span class="token keyword">const</span> tableItems <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> items <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  tableItems<span class="token punctuation">.</span>value <span class="token operator">=</span> items
<span class="token punctuation">}</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">await</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>el<span class="token operator">-</span>table v<span class="token operator">-</span>loading<span class="token operator">=</span><span class="token string">&quot;loading&quot;</span> <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">&quot;tableItems&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">// ...</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7701\u7565\u4E86\u5F88\u591A\u6B65\u9AA4\uFF1A</p><ul><li>\u4E0D\u9700\u8981\u521B\u5EFAloading\u53D8\u91CF</li><li>\u4E0D\u9700\u8981\u5BF9loading\u53D8\u91CF\u8FDB\u884Ctrue/false\u7684\u8BBE\u7F6E</li><li>\u4E0D\u9700\u8981\u5BF9\u8BF7\u6C42\u5931\u8D25loading\u72B6\u6001\u9700\u8981try/catch\u6765\u5173\u95ED</li></ul>`,23),o=[p];function l(c,i){return s(),a("div",null,o)}var d=n(t,[["render",l],["__file","vue3-axios-loading.html.vue"]]);export{d as default};
