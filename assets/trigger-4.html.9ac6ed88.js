import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.c099355f.js";const e={},p=t(`<p>\u4E0A\u6587\u603B\u7ED3\u4E2D\u63D0\u5230\u300E\u5982\u679C\u6211\u6765\u5B9E\u73B0cron\u89E6\u53D1\u5668\u300F\u6211\u4F1A\u600E\u4E48\u505A\u3002\u7B14\u8005\u6CA1\u6709\u5DE8\u4EBA\u7684\u80FD\u529B\u53BB\u5F00\u53D1\u4E00\u4E2A\u66F4\u5B8C\u7F8E\u7684cron\u89E3\u6790\uFF0C\u6240\u4EE5\u9009\u62E9\u7AD9\u5728\u5DE8\u4EBA\u80A9\u8180\uFF0C\u4ECEgithub\u4E2D\u627E\u5230\u4E00\u4E2A\u4E0D\u9519\u7684crontab\u89E3\u6790\u5E93\uFF0C\u6545\u7B14\u8005\u4F7F\u7528\u8BE5\u5E93\u6765\u5B9E\u73B0crontab\u89E6\u53D1\u5668\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> timedelta<span class="token punctuation">,</span> datetime
<span class="token keyword">from</span> tzlocal <span class="token keyword">import</span> get_localzone

<span class="token keyword">from</span> apscheduler<span class="token punctuation">.</span>triggers<span class="token punctuation">.</span>base <span class="token keyword">import</span> BaseTrigger
<span class="token keyword">from</span> apscheduler<span class="token punctuation">.</span>util <span class="token keyword">import</span> convert_to_datetime<span class="token punctuation">,</span> astimezone<span class="token punctuation">,</span> datetime_ceil
<span class="token keyword">from</span> croniter <span class="token keyword">import</span> croniter


<span class="token keyword">class</span> <span class="token class-name">CrontabTrigger</span><span class="token punctuation">(</span>BaseTrigger<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cron_expr<span class="token punctuation">,</span> start_date<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> timezone<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> jitter<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        :param str cron_expr: cron\u8868\u8FBE\u5F0F
        :param datetime|str start_date: \u6700\u65E9\u89E6\u53D1\u65F6\u95F4
        :param datetime|str end_date: \u6700\u665A\u89E6\u53D1\u65F6\u95F4
        :param datetime.tzinfo|str timezone: \u65F6\u533A
        :param int|None jitter: \u4EFB\u52A1\u6267\u884C\u5EF6\u8FDF\u65F6\u95F4\u4E0D\u8D85\u8FC7jitter\u79D2
        &quot;&quot;&quot;</span>
        <span class="token keyword">if</span> timezone<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>timezone <span class="token operator">=</span> astimezone<span class="token punctuation">(</span>timezone<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>start_date<span class="token punctuation">,</span> datetime<span class="token punctuation">)</span> <span class="token keyword">and</span> start_date<span class="token punctuation">.</span>tzinfo<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>timezone <span class="token operator">=</span> start_date<span class="token punctuation">.</span>tzinfo
        <span class="token keyword">elif</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> datetime<span class="token punctuation">)</span> <span class="token keyword">and</span> end_date<span class="token punctuation">.</span>tzinfo<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>timezone <span class="token operator">=</span> end_date<span class="token punctuation">.</span>tzinfo
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>timezone <span class="token operator">=</span> get_localzone<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>start_date <span class="token operator">=</span> convert_to_datetime<span class="token punctuation">(</span>start_date<span class="token punctuation">,</span> self<span class="token punctuation">.</span>timezone<span class="token punctuation">,</span> <span class="token string">&#39;start_date&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>end_date <span class="token operator">=</span> convert_to_datetime<span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> self<span class="token punctuation">.</span>timezone<span class="token punctuation">,</span> <span class="token string">&#39;end_date&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>jitter <span class="token operator">=</span> jitter
        self<span class="token punctuation">.</span>cron_expr <span class="token operator">=</span> cron_expr

    <span class="token keyword">def</span> <span class="token function">_calc_next_time</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> start_date<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">iter</span> <span class="token operator">=</span> croniter<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cron_expr<span class="token punctuation">,</span> start_date<span class="token punctuation">)</span>  <span class="token comment"># noqa</span>
        <span class="token keyword">return</span> <span class="token builtin">iter</span><span class="token punctuation">.</span>get_next<span class="token punctuation">(</span>datetime<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_next_fire_time</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> previous_fire_time<span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> previous_fire_time<span class="token punctuation">:</span>
            start_date <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> previous_fire_time <span class="token operator">+</span> timedelta<span class="token punctuation">(</span>microseconds<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> start_date <span class="token operator">==</span> previous_fire_time<span class="token punctuation">:</span>
                start_date <span class="token operator">+=</span> timedelta<span class="token punctuation">(</span>microseconds<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token comment"># \u5F53\u524D\u65F6\u95F4\u548C\u7528\u6237\u9884\u8BBE\u7684\u8D77\u59CB\u65F6\u95F4\uFF0C\u4F60\u8BF4\u5E94\u8BE5\u542C\u8C01\u7684\uFF1F\u5F53\u7136\u662F\u8C01\u5927\u542C\u8C01\u7684\u554A\uFF01</span>
            start_date <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> self<span class="token punctuation">.</span>start_date<span class="token punctuation">)</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>start_date <span class="token keyword">else</span> now

        next_date <span class="token operator">=</span> datetime_ceil<span class="token punctuation">(</span>start_date<span class="token punctuation">)</span><span class="token punctuation">.</span>astimezone<span class="token punctuation">(</span>self<span class="token punctuation">.</span>timezone<span class="token punctuation">)</span>
        <span class="token comment"># \u4F7F\u7528\u5F53\u524D\u65F6\u95F4\u8BA1\u7B97\u4E0B\u6B21\u8FD0\u884C\u65F6\u95F4</span>
        next_date <span class="token operator">=</span> self<span class="token punctuation">.</span>_calc_next_time<span class="token punctuation">(</span>next_date<span class="token punctuation">)</span>

        next_date <span class="token operator">=</span> self<span class="token punctuation">.</span>_apply_jitter<span class="token punctuation">(</span>next_date<span class="token punctuation">,</span> self<span class="token punctuation">.</span>jitter<span class="token punctuation">,</span> now<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span>next_date<span class="token punctuation">,</span> self<span class="token punctuation">.</span>end_date<span class="token punctuation">)</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>end_date <span class="token keyword">else</span> next_date
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://miclon-job.oss-cn-hangzhou.aliyuncs.com/img/20220807232933.png" alt="" loading="lazy"></p><p>\u4EE5\u4E0A\uFF0C\u7B97\u662F\u5BF9\u89E6\u53D1\u5668\u6E90\u7801\u89E3\u8BFB\u7684\u4E00\u4E2A\u4EA4\u4EE3\u3002\u3002\u3002</p><p>\u4F46\u662F\uFF0C\u5982\u679C\u4F60\u6CE8\u610F\u4E0B\u6807\u9898\uFF0C\u6211\u60F3\u6211\u8FD8\u6709\u756A\u5916\u7BC7[2]\u3002\u3002</p>`,5),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(e,[["render",c],["__file","trigger-4.html.vue"]]);export{d as default};
