import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o,c,a as n,b as i,e as s,d as a}from"./app.c099355f.js";const u={},l=s(`<div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p><strong>\u672C\u6587\u4EC5\u4F9B\u5B66\u4E60\u4EA4\u6D41\uFF0C\u8BF7\u52FF\u7528\u4E8E\u975E\u6CD5\u7528\u9014\uFF0C\u8C22\u8C22\uFF01</strong></p></div><h3 id="\u5206\u6790\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790\u95EE\u9898" aria-hidden="true">#</a> \u5206\u6790\u95EE\u9898</h3><p>\u5728\u6D4F\u89C8\u7F51\u6613\u4E91\u97F3\u4E50\u7F51\u7AD9\u65F6\u5019\u53D1\u73B0\uFF0C\u5F88\u591A\u64CD\u4F5C\u8B6C\u5982\u542C\u6B4C\u3001\u67E5\u770B\u8BC4\u8BBA\u7B49\u64CD\u4F5C\uFF0C\u63D0\u4EA4\u53C2\u6570\u5747\u4E3Aparams+encSecKey\u7EC4\u5408\u63D0\u4EA4\u3002encSecKey\uFF1A\u4E00\u76F4\u662F256\u4F4D\u3002</p><h3 id="\u5206\u6790\u52A0\u5BC6\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790\u52A0\u5BC6\u5B57\u6BB5" aria-hidden="true">#</a> \u5206\u6790\u52A0\u5BC6\u5B57\u6BB5</h3><p>\u4EE5\u5E38\u89C4\u65B9\u5F0F\uFF0C\u901A\u8FC7\u641C\u7D22\u770B\u770B\u80FD\u5426\u5B9A\u4F4D\u5230\u52A0\u5BC6\u5165\u53E3\u3002 <img src="https://miclon-job.oss-cn-hangzhou.aliyuncs.com/img/20220608215422.png" alt="" loading="lazy"></p><h3 id="\u5165\u53E3\u51FD\u6570d\u53CA\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u5165\u53E3\u51FD\u6570d\u53CA\u53C2\u6570" aria-hidden="true">#</a> \u5165\u53E3\u51FD\u6570d\u53CA\u53C2\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">,</span> g</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> h<span class="token punctuation">.</span>encText <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">,</span>
    h<span class="token punctuation">.</span>encText <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>encText<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>
    h<span class="token punctuation">.</span>encSecKey <span class="token operator">=</span> <span class="token function">c</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">,</span>
    h
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570d\u6709\u56DB\u4E2A\u53C2\u6570\uFF0C\u5185\u90E8\u8C03\u7528\u4E86\u51FD\u6570a\u3001\u51FD\u6570b\u3001\u51FD\u6570c\u3002\u5C1D\u8BD5\u9010\u4E00\u7A81\u7834\u3002</p><p>\u9996\u5148\u89C2\u5BDF\u51FD\u6570d\u7684\u56DB\u4E2A\u53C2\u6570\u5206\u522B\u662F\u4EC0\u4E48\uFF0C\u901A\u8FC7\u65AD\u70B9\u8C03\u8BD5\u3002</p><table><thead><tr><th>\u53C2\u6570\u540D\u79F0</th><th>\u53C2\u6570\u5185\u5BB9</th><th>\u53C2\u6570\u7C7B\u578B</th></tr></thead><tbody><tr><td>d</td><td>&quot;{&quot;id&quot;:&quot;1471802279&quot;,&quot;c&quot;:&quot;[{&quot;id&quot;:&quot;1471802279&quot;}]&quot;,&quot;csrf_token&quot;:&quot;799f81df17fd9175b69bb9ff314ca3d8&quot;}&quot;</td><td>str</td></tr><tr><td></td><td></td><td></td></tr><tr><td>e</td><td>&quot;010001&quot;</td><td>str</td></tr><tr><td></td><td></td><td></td></tr><tr><td>f</td><td>&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</td><td>str</td></tr><tr><td></td><td></td><td></td></tr><tr><td>g</td><td>&quot;0CoJUm6Qyw8W8jud&quot;</td><td>str</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>\u4EE5\u4E0A\u53C2\u6570\u901A\u8FC7\u591A\u6B21\u89C2\u5BDF\uFF0C\u53EA\u6709\u53C2\u6570d\u662F\u53D8\u52A8\u7684\uFF0C\u5176\u4E2D\u53D8\u52A8\u7684\u503C\u4E3Aid\uFF0C\u5373\u6B4C\u66F2id\u3002</p><p>\u4E4B\u540E\u7684\u8C03\u8BD5\u7ED3\u679C\u5747\u4EE5\u4EE5\u4E0A\u53C2\u6570\u4E3A\u57FA\u7840\u505A\u8C03\u8BD5\u3002</p><h3 id="\u51FD\u6570a" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570a" aria-hidden="true">#</a> \u51FD\u6570a</h3><p>\u51FD\u6570a\u7684\u5165\u53E3\u4E3A\uFF1Ai = a(16)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&gt;</span> d<span class="token punctuation">;</span> d <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    e <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> b<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      e <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>
      c <span class="token operator">+=</span> b<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> c
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u70B9JavaScript\u57FA\u7840\u7684\u5E94\u8BE5\u770B\u51FA\u6765\uFF0C\u4F20\u5165\u53D8\u91CFa\uFF0C\u8F93\u51FA\u53D8\u91CFa\u4E2A\u968F\u673A\u5B57\u7B26\u3002 \u90A3\u5165\u53E3\u51FD\u6570a\u4F20\u5165\u53D8\u91CF\u53C2\u657016\uFF0C\u5373\u751F\u621016\u4E2A\u968F\u673A\u5B57\u7B26\u3002</p><h3 id="\u51FD\u6570b" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570b" aria-hidden="true">#</a> \u51FD\u6570b</h3><p>h.encText = b(d, g), h.encText = b(h.encText, i),</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> c <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
  <span class="token punctuation">,</span> d <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;0102030405060708&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">,</span> e <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
  <span class="token punctuation">,</span> f <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">iv</span><span class="token operator">:</span> d<span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> f<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570b\u662F\u4E00\u4E2A\u5178\u578B\u7684\u5229\u7528Crypto\u5E93\u8FDB\u884CAES\u52A0\u5BC6\u3002\u5982\u679C\u5BF9\u67D0\u4E2A\u52A0\u5BC6\u5E93\u4E0D\u4E86\u89E3\u4E0D\u59A8google\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Custom Key and IV</span>
<span class="token keyword">var</span> key <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;000102030405060708090a0b0c0d0e0f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> iv <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;101112131415161718191a1b1c1d1e1f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> encrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;Message&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">iv</span><span class="token operator">:</span> iv <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Block Modes and Padding</span>
<span class="token keyword">var</span> encrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;Message&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Secret Passphrase&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CFB</span><span class="token punctuation">,</span>
  <span class="token literal-property property">padding</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>AnsiX923
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),r=a("\u5F15\u7528\u6765\u6E90\uFF1A"),d={href:"https://cryptojs.gitbook.io/docs/#ciphers",target:"_blank",rel:"noopener noreferrer"},k=a("https://cryptojs.gitbook.io/docs/#ciphers"),v=s(`<p>\u5BF9\u5E94\u7684\uFF0C\u6211\u4E0B\u8F7D\u4E86Python\u7684Crypto\u5305\uFF0C\u627E\u5230\u4E86\u91CC\u9762\u7684Cipher/AES.py\u6E90\u7801\u89C2\u5BDF\u4E86\u4E0B <em>For <code>MODE_CBC</code>, <code>MODE_CFB</code>, and <code>MODE_OFB</code> it must be 16 bytes long.</em> \u6240\u52A0\u53C2\u6570\u5FC5\u987B\u662F16\u5B57\u8282\u957F\u3002 <em>:Return: an AES object, of the applicable mode.</em><em>\u8FD4\u56DE\u662F\u4E00\u4E2AAES\u5BF9\u8C61\u3002</em> _ \u8FDB\u5165\u8FD9\u4E2AAES\u5BF9\u8C61\u65B9\u6CD5encrypt</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> plaintext<span class="token punctuation">,</span> output<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
   	:Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            Its lenght must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If \`\`None\`\`, the ciphertext is returned.
        :Return:
          If \`\`output\`\` is \`\`None\`\`, the ciphertext is returned as \`\`bytes\`\`.
          Otherwise, \`\`None\`\`.
        &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5FC5\u987B\u662Fblock size\u7684\u500D\u6570\uFF0Cblock size \u9ED8\u8BA4\u662F16 \u4E8E\u662F\u5C31\u6709\u4E86\u4EE5\u4E0B\u65B9\u6CD5\uFF0C\u7528\u6765\u6784\u5EFA\u52A0\u5BC6\u3002 \u8FD9\u91CC\u53EF\u80FD\u4F1A\u7591\u95EE\uFF0Ckey\u548Civ\u4E0D\u5E94\u8BE5\u90FD\u898116\u5B57\u8282\u5417\uFF1F\u5176\u5B9E\u662F\u56E0\u4E3A\u7F51\u6613\u4E91\u97F3\u4E50\u4F20\u5165\u7684\u56FA\u5B9Aiv\u548Ckey\u503C\u90FD\u5DF2\u7ECF\u662F16\u5B57\u8282\u4E86\uFF0C\u901A\u8FC7print(len(iv.encode()))\uFF0C\u5C31\u89C2\u5BDF\u5230\u4E86\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> key<span class="token punctuation">,</span> iv<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u5C06\u4F20\u5165\u7684\u6587\u672C\u8FDB\u884Cblock_size\u500D\u6570\u586B\u5145</span>
    clear_text <span class="token operator">=</span> pad<span class="token punctuation">(</span>data_to_pad<span class="token operator">=</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block_size<span class="token operator">=</span>AES<span class="token punctuation">.</span>block_size<span class="token punctuation">)</span>
    <span class="token comment"># \u521B\u5EFAAES cipher</span>
    encryptor <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_CBC<span class="token punctuation">,</span> iv<span class="token operator">=</span>iv<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># \u8FDB\u884CMODE_CBC\u52A0\u5BC6</span>
    ciphertext <span class="token operator">=</span> encryptor<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>clear_text<span class="token punctuation">)</span>
    <span class="token comment"># \u8F6C\u7801\u8F93\u51FA</span>
    ciphertext <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> ciphertext
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570b\u7684\u7B2C\u4E8C\u79CD\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570b\u7684\u7B2C\u4E8C\u79CD\u65B9\u6CD5" aria-hidden="true">#</a> \u51FD\u6570b\u7684\u7B2C\u4E8C\u79CD\u65B9\u6CD5</h3><p>\u7B2C\u4E00\u79CD\u662F\u5229\u7528python\u7684Crypto\u5305\u5B9E\u73B0\u4E86\u51FD\u6570b\u7684\u529F\u80FD\u3002 \u7B2C\u4E8C\u79CD\u65B9\u6CD5\u6211\u51C6\u5907\u7528\u73B0\u6709\u7684crypto\u52A0\u5BC6js\u6587\u4EF6\uFF0C\u76F4\u63A5\u8FDB\u884C\u52A0\u5BC6\u3002 \u5728python\u4E2D\u5C31\u5F88\u7B80\u5355\u7684\u5229\u7528execjs\u5E93\u76F4\u63A5\u8C03\u7528JS\u6587\u4EF6</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> execjs


<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;cryptoJS.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    js_str <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

js_obj <span class="token operator">=</span> execjs<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>js_str<span class="token punctuation">)</span>
word <span class="token operator">=</span> <span class="token string">&#39;{&quot;id&quot;:&quot;1476219294&quot;,&quot;c&quot;:&quot;[{\\\\&quot;id\\\\&quot;:\\\\&quot;1476219294\\\\&quot;}]&quot;,&quot;csrf_token&quot;:&quot;&quot;}&#39;</span>
key <span class="token operator">=</span> <span class="token string">&quot;0CoJUm6Qyw8W8jud&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>js_obj<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">&#39;getpasss&#39;</span><span class="token punctuation">,</span> word<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570c" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570c" aria-hidden="true">#</a> \u51FD\u6570c</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> d<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">setMaxDigits</span><span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RSAKeyPair</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span>
    e <span class="token operator">=</span> <span class="token function">encryptedString</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570c\u5C31\u662F\u4E00\u4E2ARSA\u52A0\u5BC6\u4E86\uFF0C\u6211\u540C\u4EE5\u4E0A\u51FD\u6570b\u7684\u7ECF\u9A8C\u3002\u627E\u5230\u4E86RSA\u7684js\u6587\u4EF6\uFF0C\u6267\u884C\u5229\u7528execjs\u8C03\u7528\uFF0C\u7B80\u5355\u7C97\u66B4\uFF0C\u54C8\u54C8\u54C8\u3002</p><p><img src="https://miclon-job.oss-cn-hangzhou.aliyuncs.com/img/20220608215506.png" alt="" loading="lazy"></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;RSAKEY.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    js_str <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

js_obj <span class="token operator">=</span> execjs<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>js_str<span class="token punctuation">)</span>

p_a <span class="token operator">=</span> <span class="token string">&quot;PsH7lXqqXnEZXpvF&quot;</span>
p_b <span class="token operator">=</span> <span class="token string">&quot;010001&quot;</span>
p_c <span class="token operator">=</span> <span class="token string">&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>js_obj<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">&#39;get_c&#39;</span><span class="token punctuation">,</span> p_a<span class="token punctuation">,</span> p_b<span class="token punctuation">,</span> p_c<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p>\u518D\u6B21\u770B\u51FD\u6570d\u7684\u65F6\u5019\u5C31\u53D1\u73B0\u5404\u4E2A\u5185\u90E8\u51FD\u6570\u5DF2\u7ECF\u88AB\u9010\u4E00\u653B\u7834 h.encText\u5373<strong>params</strong> h.encSecKey\u5373<strong>encSecKey</strong></p><p><strong><em>\u9A8C\u8BC1\u6B63\u786E\u6027</em></strong></p><p><img src="https://miclon-job.oss-cn-hangzhou.aliyuncs.com/img/20220608215523.png" alt="" loading="lazy"><img src="https://miclon-job.oss-cn-hangzhou.aliyuncs.com/img/20220608215537.png" alt="" loading="lazy"></p>`,16);function b(m,h){const t=e("ExternalLinkIcon");return o(),c("div",null,[l,n("blockquote",null,[n("p",null,[r,n("a",d,[k,i(t)])])]),v])}var f=p(u,[["render",b],["__file","163-music-encrypt.html.vue"]]);export{f as default};
